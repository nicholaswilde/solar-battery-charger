---
version: '3'

dotenv:
  - task.env

vars:
  GIT_ROOT:
    sh: git rev-parse --show-toplevel
  #PORT:
    #sh: cat {{ .GIT_ROOT }}/sketch.json | jq -r '.cpu.port' | sed s/"serial:\/\/"//

tasks:
  attach:
    desc: Export board and port to sketch.json file
    cmds:
      - jq -n --arg board {{ .BOARD }} --arg port {{ .PORT}} '{"cpu":{"fqbn":$board,"port":$port}}' > sketch.json
    deps:
      - _varcheck

  _varcheck:
    cmds:
      - test ! -z "{{.BOARD}}" || (echo "Please define BOARD parameter"; exit 1)
      - test ! -z "{{.PORT}}" || (echo "Please define PORT parameter"; exit 1)

  compile:
    desc: Compile the main sketch
    cmds:
      - arduino-cli compile .

  compile-upload:
    desc: Compile and upload main sketch
    cmds:
      - task: compile
      - task: upload
      - task: console

  console:
    desc: Monitor the console with screen
    vars:
      PORT:
        sh: cat {{ .GIT_ROOT }}/sketch.json | jq -r '.cpu.port' | sed s/"serial:\/\/"//
    cmds:
      - screen {{ .PORT }}  $BAUD_RATE

  upload:
    desc: Upload the main sketch
    cmds:
      - arduino-cli upload .

  test-create:
    desc: test
    vars:
      VERSION:
        sh: arduino-cli version | awk '{print $3}'
      DATE:
        sh: date +%d%^b%Y
    cmds:
      - test ! -z "{{ .NAME }}" || (echo "Please define NAME parameter"; exit 1)
      - cp -r {{ .GIT_ROOT }}/test/template "{{ .GIT_ROOT }}/test/{{ .NAME }}"
      - mv "{{ .GIT_ROOT }}/test/{{ .NAME }}/template.ino" "{{ .GIT_ROOT }}/test/{{ .NAME }}/{{ .NAME }}.ino"
      - go-replace -s '${NAME}' -r "{{.NAME}}" --path="{{ .GIT_ROOT }}/test/{{ .NAME }}/README.md" --path-pattern='*.*'
      - go-replace -s '${NAME}' -r "{{.NAME}}" --path="{{ .GIT_ROOT }}/test/{{ .NAME }}/{{ .NAME }}.ino" --path-pattern='*.*'
      - go-replace -s '${DATE}' -r "{{ .DATE }}" --path="{{ .GIT_ROOT }}/test/{{ .NAME }}/{{ .NAME }}.ino" --path-pattern='*.*'
      - go-replace -s '${VERSION}' -r "{{ .VERSION }}" --path="{{ .GIT_ROOT }}/test/{{ .NAME }}/{{ .NAME }}.ino" --path-pattern='*.*'
      - test ! -f "{{ .GIT_ROOT }}/sketch.json" || cp "{{ .GIT_ROOT }}/sketch.json" "{{ .GIT_ROOT }}/test/{{ .NAME }}/sketch.json"
    silent: true

  vars:
    desc: Print all the variables
    cmds:
      - "printf 'task: Available variables for this project:\n'"
      - 'printf "{{ .COLOR }}* BAUD_RATE\e[m          %s\n" "{{ .BAUD_RATE }}"'
      - 'printf "{{ .COLOR }}* PORT\e[m               %s\n" "{{ .PORT }}"'
    vars:
      # Blue
      COLOR: '\e[1;34m'
      PORT:
        sh: cat {{ .GIT_ROOT }}/sketch.json | jq -r '.cpu.port' | sed s/"serial:\/\/"//
    silent: true

  default:
    cmds:
      - task -l
    silent: true
