---
version: '3'

dotenv:
  - task.env

vars:
  GIT_ROOT:
    sh: git rev-parse --show-toplevel

includes:
  test: ./.taskfiles/test.yaml

tasks:
  attach:
    desc: Export board and port to sketch.json file
    cmds:
      - jq -n --arg board {{ .BOARD }} --arg port {{ .PROTOCOL }}://{{ .PORT}} '{"cpu":{"fqbn":$board,"port":$port}}' > sketch.json
    deps:
      - task: _varcheck

  bootstrap:
    desc: Bootstrap the entire environment. ⚠️ WARNING! This overwrites the exiting arduino-cli config file!
    cmds:
      - arduino-cli config init --overwrite
      - task: core-install
      - task: lib-install
      - task: attach

  compile:
    desc: Compile the main sketch
    cmds:
      - arduino-cli compile .

  compile-upload:
    desc: Compile and upload main sketch
    cmds:
      - task: compile
      - task: upload
      - task: console

  console:
    desc: Monitor the console with screen
    cmds:
      - screen {{ .PORT }} $BAUD_RATE

  core-install:
    desc: Install core
    cmds:
      - arduino-cli config add board_manager.additional_urls http://arduino.esp8266.com/stable/package_esp8266com_index.json
      - arduino-cli core update-index
      - arduino-cli core install {{ .CORES }}

  lib-install:
    desc: Install arduino-cli libraries
    cmds:
      - 'arduino-cli lib install {{ .LIBS }}'

  secrets:
    desc: Export parameters to secrets.h ⚠️ WARNING! This task overwrites secrets.h
    cmds:
      - test ! -z "{{.SSID}}" || (echo "Please define SSID parameter"; exit 1)
      - test ! -z "{{.PASS}}" || (echo "Please define PASS parameter"; exit 1)
      - test ! -z "{{.CH_ID}}" || (echo "Please define CH_ID parameter"; exit 1)
      - test ! -z "{{.WRITE_APIKEY}}" || (echo "Please define WRITE_APIKEY parameter"; exit 1)
      - echo "#define SECRET_SSID \"{{ .SSID }}\"" > secrets.h
      - echo "#define SECRET_PASS \"{{ .PASS }}\"" >> secrets.h
      - echo "#define SECRET_CH_ID {{ .CH_ID }}" >> secrets.h
      - echo "#define SECRET_WRITE_APIKEY \"{{ .WRITE_APIKEY }}\"" >> secrets.h
      - echo "#define SECRET_HOSTNAME \"{{ .HOSTNAME }}\"" >> secrets.h
    vars:
      HOSTNAME: Feather
    silent: true

  serve:
    desc: Run the builtin mkdocs development server.
    cmds:
      - mkdocs serve
    silient: true

  upload:
    desc: Upload the main sketch
    cmds:
      - arduino-cli upload .

  vars:
    desc: Print all the variables
    cmds:
      - "printf 'task: Available variables for this project:\n'"
      - 'printf "{{ .COLOR }}* BAUD_RATE\e[m          %s\n" "{{ .BAUD_RATE }}"'
      - 'printf "{{ .COLOR }}* BOARD\e[m              %s\n" "{{ .BOARD }}"'
      - 'printf "{{ .COLOR }}* PORT\e[m               %s\n" "{{ .PORT }}"'
      - 'printf "{{ .COLOR }}* PROTOCOL\e[m           %s\n" "{{ .PROTOCOL }}"'
    vars:
      # Blue
      COLOR: '\e[1;34m'
      PORT:
        sh: cat {{ .GIT_ROOT }}/sketch.json | jq -r '.cpu.port' | sed s/"serial:\/\/"//
    silent: true

  _varcheck:
    cmds:
      - test ! -z "{{.BOARD}}" || (echo "Please define BOARD parameter"; exit 1)
      - test ! -z "{{.PORT}}" || (echo "Please define PORT parameter"; exit 1)
      - test ! -z "{{.PROTOCOL}}" || (echo "Please define PROTOCOL parameter"; exit 1)
    silent: true

  default:
    cmds:
      - task -l
    silent: true
